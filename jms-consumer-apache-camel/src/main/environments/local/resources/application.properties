# Binding health checks to an internal port
management.port=8081

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

logging.config=classpath:logback.xml

# The name of the Camel app
camel.springboot.name=jms-consumer-apache-camel

# Keeps the application alive
camel.springboot.main-run-controller=true

# The name of the service hosting the ActiveMQ broker or message gateway
# Can be customized using the 'ACTIVEMQ_SERVICE_NAME' variable to use a different broker.
activemq.service.name=activemq

# The following properties can be customized using the 'ACTIVEMQ_SERVICE_HOST' and 'ACTIVEMQ_SERVICE_PORT' environment variables.
# This is indeed done automatically by Kubernetes when the application is deployed in a namespace containing an instance of ActiveMQ named 'activemq'.
# The service defaults to localhost. You need to change these properties for development purposes only.
activemq.service.host=localhost
activemq.service.port=

# ActiveMQ Credentials
activemq.broker.username=
activemq.broker.password=

# The following property binds all previous configurations together
activemq.broker.url=failover:(vm://${activemq.service.host})?initialReconnectDelay=100&maxReconnectAttempts=10&maxReconnectDelay=1000&warnAfterReconnectAttempts=5

# Set the number of concurrent consumers for the ActiveMQ ('ACTIVEMQ_CONCURRENT_CONSUMERS')
activemq.concurrent.consumers=10

# Set the number of connections created by the connection pool ('ACTIVEMQ_POOL_MAX_CONNECTIONS')
activemq.pool.max.connections=10

# DataSource
spring.datasource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=sa

# Datasource Pool Tomcat Properties
spring.datasource.tomcat.max-wait=20000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

# JPA Properties
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
spring.jpa.properties.hibernate.id.new_generator_mappings = false
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.transaction.flush_before_completion=true

# Logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
